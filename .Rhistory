pollutantmean("~/CloudStorage/GoogleDrive/Online Learning/Coursera/R Programming/week2/specdata/", "nitrate", id=1:4)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
pollutantmean("~/CloudStorage/GoogleDrive/Online Learning/Coursera/R Programming/week2/specdata/", "nitrate", id=1:4)
pollutantmean("~/CloudStorage/GoogleDrive/Online Learning/Coursera/R Programming/week2/specdata/", "nitrate", id=2:4)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
pollutantmean("~/CloudStorage/GoogleDrive/Online Learning/Coursera/R Programming/week2/specdata/", "nitrate", id=2:4)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
pollutantmean("~/CloudStorage/GoogleDrive/Online Learning/Coursera/R Programming/week2/specdata/", "nitrate", id=2:4)
pollutantmean("~/CloudStorage/GoogleDrive/Online Learning/Coursera/R Programming/week2/specdata/", "nitrated", id=2:4)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
pollutantmean("~/CloudStorage/GoogleDrive/Online Learning/Coursera/R Programming/week2/specdata/", "nitrated", id=2:4)
pollutantmean("~/CloudStorage/GoogleDrive/Online Learning/Coursera/R Programming/week2/specdata/", "nitrate", id=2:4)
pollutantmean("specdata/", "nitrated", id=2:4)
pollutantmean("specdata/", "nitrate", id=2:4)
pollutantmean("specdata", "nitrate", id=2:4)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
pollutantmean("specdata", "nitrate", id=2:4)
pollutantmean("specdata", "sulphate", id=2:4)
pollutantmean("specdata", "sulphate", id=1:4)
pollutantmean("specdata", "sulfate", id=1:4)
pollutantmean("specdata", "sulfate", id=3:4)
pollutantmean("specdata", "sulfate", id=4)
pollutantmean("specdata", "sulfate", id=2)
pollutantmean("specdata", "sulfate", id=1)
pollutantmean("specdata", "sulfate", id=0)
pollutantmean("specdata", "sulfate", id=20)
pollutantmean("specdata", "sulfate", id=20:25)
pollutantmean("specdata", "sulfate", id=20:21)
pollutantmean("specdata", "sulfate", id=21)
pollutantmean("specdata", "sulfate")
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
pollutantmean("specdata", "sulfate")
pollutantmean("specdata", "sulfate",100:120)
(d <- data.frame(x = 1, y = 1:10, fac = fac))
(d <- data.frame(x = 1, y = 1:10))
d
d2 <- data.frame(x = 2, y = 11:20)
d2
rbind(d,d2)
file1
complete.cases(file1)
complete.cases(file1,)
file1[complete.cases(file1)]
file1[complete.cases(file1),]
dim(file1[complete.cases(file1),])
dim(file1[complete.cases(file1),1])
dim(file1[complete.cases(file1),2])
dim(file1[complete.cases(file1),3])
dim(file1[complete.cases(file1),])
dim(file1[complete.cases(file1),][1])
file1[complete.cases(file1),1]
length(file1[complete.cases(file1),1])
length(file1[complete.cases(file1),2])
data.frame(id=1,nobs=length(file1[complete.cases(file1),1]))
data.frame(id=2,nobs=length(file2[complete.cases(file2),1]))
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
complete("specdata",1)
complete("specdata",1:3)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
complete("specdata",1:3)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
complete("specdata",1:3)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
complete("specdata",1:3)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
complete("specdata",1:3)
source('~/GitHub/DataScience/rProg/MyRfiles/assignment1-1.R')
complete("specdata",1:3)
complete("specdata",c(2,4,7))
complete("specdata",30:25
)
pollutantmean("specdata", "sulfate",70:72)
pollutantmean("specdata", "nitrate",70:72)
pollutantmean("specdata", "nitrate",1:10)
pollutantmean("specdata", "sulfate",1:10)
complete("specdata",30:25
)
complete("specdata",3)
complete("specdata",c(4,8,10))
complete("specdata",3)
complete("specdata",3:10)
complete("specdata",300:310)
complete("specdata")
d<-complete("specdata")
d
d[nobs]>150
d[,nobs]>150
d[,nobs]
d[,"nobs"]
d[,"nobs"]>150
d[d[,"nobs"]>150]
d[d[,"nobs"]>150,]
d[d[,"nobs"]<150,]
d[d[,"nobs"]<150,1]
y<-d[d[,"nobs"]<150,1]
class(y)
dim(y)
length(y)
file1
file1[complete.cases(file1)]
dim(file1[complete.cases(file1),])
file1[complete.cases(file1),]
cor(file1[complete.cases(file1),2], file1[complete.cases(file1),3])
cor(file1[complete.cases(file1),2], file1[complete.cases(file1),3])
m <- cbind(1, 1:7)
m
m <- cbind(m, 8:14)[, c(1, 3, 2)]
m
m<c(1,2,3,4)
m<-c(1,2,3,4)
m
rbind(m,c(87,98))
m<-c(1,2,3,4)
cbind(m,c(87,98))
m<-c(1,2,3,4)
m<-paste(m,87,98)
m
m<-c(1,2,3,4)
c(m,98,87)
m
complete("specdata",1:3)
pollutantmean("specdata", "sulfate", id=20:21)
pollutantmean("specdata", "sulfate", id=30:21)
pollutantmean("specdata", "sulfated", id=30:21)
pollutantmean("specdata", "sulfate", id=30:21)
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
source('~/GitHub/DataScience/rProg/MyRfiles/complete.R')
source('~/GitHub/DataScience/rProg/MyRfiles/pollutantmean.R')
pollutantmean("specdata", "sulfate", id=20:21)
complete("specdata",1:3)
cr<- corr("specdata",150)
head(cr)
cr
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
cr<- corr("specdata",150)
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
cr<- corr("specdata",150)
cr<- corr("specdata",250)
cr<- corr("specdata",250)
cr
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
cr<- corr("specdata",250)
cr
m
length(m)
cr<- corr("specdata",400)
cr<- corr("specdata",600)
cr<- corr("specdata",800)
cr
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
cr<- corr("specdata",800)
cr
m[1]
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
cr<- corr("specdata",800)
cr
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
cr<- corr("specdata",800)
cr
head(cr)
cr<- corr("specdata",150)
head(cr)
summary(cr)
cr<- corr("specdata",400)
head(cr)
summary(cr)
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
cr<- corr("specdata",5000)
cr
summary(cr)
length(cr)
m<-c()
m
length(m)
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
cr<- corr("specdata",5000)
cr
length(cr)
summary(cr)
cr<- corr("specdata")
source('~/GitHub/DataScience/rProg/MyRfiles/corr.R')
cr<- corr("specdata")
summary(cr)
length(cr)
cr<- corr("specdata",5000)
length(cr)
summary(cr)
summary(m)
m
m<-c(0)
summary(m)
source("submitscript1.R")
source("submitscript2.R")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
swirl()
demo()
x<-list(z=1:5,b=norm(10))
x<-list(z=1:5,b=rnorm(10))
x
x<-c(z=1:5,b=rnorm(10))
x
x<-c(1:5,x=1,y=2)
x
x<-c(a=1:5,x=1,y=2)
x
x<-rbind(x,c(a=3:15,x=3,y=5)
)
x<-rbind(x,c(a=3:7,x=3,y=5))
x<-rbind(x,c(a=5:10,x=3,y=5))
x<-rbind(x,c(5:10,x=3,y=5))
x<-rbind(x,c(5:9,3,5))
x<-rbind(x,c(a=1:5,x=3,y=5))
file1
x<-c(1:10)
x
dim(x)<-c(2,5)
x
as.list(x)
as.vector(x)
x
x<-1:4
x
lapply(x, runif)
x<-list(a=1:4, b=4:8)
lapply(x, mean)
x
?apply
?Quantile
?quantile
x<-matrix(rnorm(200),20,10)
apply(x, 1, quantile, probs=c(0.25, 0.75))
x
apply(x, 1, quantile, probs=c(0.25, 0.75))
y<-apply(x, 1, quantile, probs=c(0.25, 0.75))
y
class(y)
a<-array(rnorm(2*2*10), c(2,2,10))
a
dim(a)
rowMeans(a, dims=2)
apply(a, c(1,2), mean)
rnorm(1,1,2)
rnorm(2,2,2)
a
a<matrix(1:10, 4, 4)
a<matrix(1:16, 4, 4)
a<matrix(1, 4, 4)
a<-matrix(1:16, 4, 4)
a
solve(a)
a<-matrix(1:12, 3, 4)
a<-matrix(1:16, 3, 4)
a
solve(a)
a<-matrix(1:12, 4, 4)
a
solve(a)
a<-matrix(numeric(1:12), 4, 4)
a<-matrix(1L:12L, 4, 4)
solve(a)
a
a<-matrix(rnorm(200), 4, 4)
a
solve(a)
a
b<-solve(a)
identical(a,b)
identical(a,a)
a[2,2]
a[2,2]<-a[2,2]-1
a[2,2]
identical(a,a)
c<-a
a<-matrix(rnorm(200), 4, 4)
a
c
identical(a,c)
c<-a
identical(a,c)
a[2,2]<-a[2,2]-1
identical(a,c)
a
c
solve(c)
solve(a)
x
a<matrix(1:16, 4, 4)
a<-matrix(1:16, 4, 4)
a
determinant(a)
a<-a*1.2
a
determinant(a)
solve(a)
a<-matrix(1:8, 4, 4)
determinant(a)
a<-matrix(rnorm(200), 4, 4)
determinant(a)
solve(a)
a<-matrix(rnorm(200), 200, 200)
a
solve(a)
a<-matrix(rnorm(100), 200, 200)
solve(a)
a<-matrix(rnorm(100), 100, 100)
solve(a)
a<-matrix(rnorm(100), 100, 100)
solve(a)
a<-matrix(rnorm(100), 10, 10)
solve(a)
a<-matrix(rnorm(800), 100, 100)
solve(a)
a<-matrix(rnorm(800), 100, 100)
solve(a)
a<-matrix(rnorm(880), 100, 100)
a<-matrix(rnorm(100), 100, 100)
a<-matrix(rnorm(880), 100, 100)
a<-matrix(rnorm(100), 100, 100)
solve(a)
a<-matrix(rnorm(1000), 100, 100)
solve(a)
a<-matrix(rnorm(2000), 100, 100)
solve(a)
a<-matrix(rnorm(3000), 100, 100)
solve(a)
a<-matrix(rnorm(4000), 100, 100)
solve(a)
a<-matrix(rnorm(40), 100, 100)
solve(a)
a
a<-matrix(rnorm(40), 100, 100)
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
abc <- makeVector(1:4)
abc
cachemean(abc)
cachemean(abc)
class(abc)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(matrix(rnorm(200), 4,4))
x<-makeCacheMatrix(matrix(rnorm(200), 4,4))
x
x$get
x$get()
x$getInverse()
source('~/GitHub/DataScience/rProg/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(200), 4,4))
cacheSolve(x)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
x$get()
cacheSolve(x)
cacheSolve(x)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(200), 4,4))
x$get()
cacheSolve(x)
cacheSolve(x)
## Return the local variable Matrix that is the inverse of 'x'
cacheSolve(x)
debugSource('~/GitHub/DataScience/rProg/ProgrammingAssignment2/cachematrix.R')
cacheSolve(x)
cacheSolve(x)
x<-makeCacheMatrix(matrix(rnorm(200), 4,4))
cacheSolve(x)
cacheSolve(x)
x<-makeCacheMatrix(matrix(rnorm(200), 5,5))
cacheSolve(x)
cacheSolve(x)
cachemean(1:3)
source('~/GitHub/DataScience/rProg/ProgrammingAssignment2/cachematrix.R')
x<-makeCacheMatrix(matrix(rnorm(200), 5,5))
cacheSolve(x)
x<-makeCacheMatrix(matrix(rnorm(200), 5,5))
cacheSolve(x)
cacheSolve(x)
x<-makeCacheMatrix(matrix(rnorm(200), 6,6))
cacheSolve(x)
x<-makeCacheMatrix(matrix(rnorm(200), 5,5))
cacheSolve(x)
cacheSolve(x)
cacheSolve(x)
library(datasets)
data(iris)
?iris
iris
length(iris)
dim(iris)
apply(iris,1,mean)
apply(iris,2,mean)
apply(iris[1],2,mean)
?gl
gl(3,10)
iris[3]
iris[5]="virginica"
iris[iris[5]=="virginica"]
iris[iris[5]=="virginica",]
mean(iris[iris[5]=="virginica",1])
s <- split(iris, iris$Species)
s
iris
library(datasets)
data(iris)
iris
s <- split(iris, iris$Species)
s
lapply(s, function(x) {colMeans(x[,c("virginica")])})
s[1]
s[2]
s[3]
colMeans(s[3])
s[3,]
dim(s[3])
dim(s[3],)
class(s[3])
class(s[3][2])
s[3][2]
s[[3]
]
s[[3]]
s[s[3],5]
s[s[3],]
lapply(s, function(x) {colMeans(x[,c("virginica")])})
s[,3]
s[,c(1,2)]
s
lapply(s, function(x) {colMeans(x[,c("virginica","setosa")])})
lapply(s, function(x) colMeans(x[,c("virginica","setosa")]))
colMeans(s)
iris[iris[5]=="virginica",]
colMeans(iris[iris[5]=="virginica",])
colMeans(iris[iris[5]=="virginica",4])
colMeans(iris[iris[5]=="virginica",2-4])
iris[iris[5]=="virginica",2-4]
iris[iris[5]=="virginica",2:4]
colMeans(iris[iris[5]=="virginica",2:4])
colMeans(iris[iris[5]=="virginica",1:4])
s <- split(iris, iris$Species)
s
lapply(s, function(x) colMeans(x[,c("Ozone")]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[,c("Sepal.Length", "Sepal.Width")]))
colMeans(iris)
apply(iris[,1:4],2,mean)
apply(iris,2,mean)
apply(iris[,1:4],2,mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
d<-tapply(mtcars$hp, mtcars$cyl, mean)
classs(d)
class(d)
d
dim(d)
d[3]
d[3]-d[1]
debug(ls)
ls
mean
debug(ls)
ls
colMeans
ls()
d
exit
quit
quit()
colMeans
colMeans()
debug(ls)
ls()
d
